# Generated by Django 5.1.3 on 2025-01-07 12:00

from django.db import migrations, models
import django.utils.timezone


def generate_serial_numbers_for_existing_accessories(apps, schema_editor):
    """Generate serial numbers for existing accessories that don't have them"""
    Accessory = apps.get_model('inventory', 'Accessory')
    import uuid
    
    for accessory in Accessory.objects.filter(serial_number__isnull=True):
        accessory.serial_number = f"ACC-{uuid.uuid4().hex[:8].upper()}"
        accessory.save()


def reverse_generate_serial_numbers(apps, schema_editor):
    """Reverse migration - set serial numbers back to null"""
    Accessory = apps.get_model('inventory', 'Accessory')
    Accessory.objects.update(serial_number=None)


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0014_alter_accessory_delivery_status_and_more'),
    ]

    operations = [
        # First, update existing accessories to have serial numbers
        migrations.RunPython(
            generate_serial_numbers_for_existing_accessories,
            reverse_generate_serial_numbers,
        ),
        
        # Then alter the field to be unique
        migrations.AlterField(
            model_name='accessory',
            name='serial_number',
            field=models.CharField(default='ACC-XXXXXXXX', help_text='Unique serial number for the accessory', max_length=50, unique=True),
        ),
        
        # Update equipment date fields
        migrations.AlterField(
            model_name='equipmentsinsurvey',
            name='date_of_receiving_from_supplier',
            field=models.DateField(default=django.utils.timezone.now, help_text='Date when equipment was received from supplier'),
        ),
        migrations.AlterField(
            model_name='equipmentsinsurvey',
            name='date_receiving_from_department',
            field=models.DateField(default=django.utils.timezone.now, help_text='Date when the equipment was received from the department'),
        ),
    ]
